spring:
  application:
    name: demo1
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  zipkin:
    #zipkin server的请求地址
    base-url: http://localhost:9411/
    sender:
      #请求方式,默认以http的方式向zipkin server发送追踪数据
      type: web
  sleuth:
    sampler:
      #采样的百分比
      probability: 1.0
    web:
      client:
        enabled: true
  boot:
    admin:
      client:
        #springboot admin client连接 spring boot admin server 端点地址
        url: http://localhost:18099
        instance:
          #默认使用的是主机名注册，改为使用ip注册
          prefer-ip: true
        username: admin
        password: 123456
### 监控中心配置, 允许监控所有接口
management:
  endpoints:
    web:
      exposure:
        include: '*'
server:
  port: 18081
#  servlet:
#    context-path: /sysbase
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    #eureka client刷新本地缓存时间
    #默认30s
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: false
    ip-address: localhost
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，
    #这个配置一般为服务刷新时间配置的三倍
    #默认90s
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    #默认30s
    lease-renewal-interval-in-seconds: 30
#日志配置文件
logging:
  config: classpath:logback-boot.xml 
  
#启用feign断路器（hystrix）
feign: 
  hystrix: 
    enabled: true

#hystrix的超时时间
hystrix:
    command:
        default:
            execution:
              timeout:
                #是否开启超时熔断（spring-cloud-starter-openfeign中的HystrixCommandProperties默认为false，表示熔断机制只在服务不可用时开启）
                enabled: true
              isolation:
                thread:
                  #设置超时熔断时间（spring-cloud-starter-openfeign中的HystrixCommandProperties默认为1000毫秒）
                  timeoutInMilliseconds: 9000
# 以配置的方式配置负载均衡策略 ：
# RandomRule（随机，默认策略） RoundRobinRule（轮询） BestAvailableRule（最小并发）
#PRODUCT-MODULE:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
# 设置feign客户端超时时间(OpenFeign默认使用ribbon)
ribbon:
  # 指的是建立连接所用的时间,适用于网络状态正常的情况下,两端连接所用的时间
  ReadTimeout: 3000
  # 指的是建立连接后从服务器读取到可用资源所用的时间
  ConnectTimeout: 3000
  eager-load:
      enable: true
  MaxAutoRetries: 0 #同一台服务器上的最大重试次数（不包括第一次尝试），默认值0；
  MaxAutoRetriesNextServer: 2 #要重试的下一个服务器的最大数量（不包括第一个服务器），默认值1；
  retryableStatusCodes: 500,502,504 #可以根据接口返回的状态码判断是否重试其他服务
  OkToRetryOnAllOperations: true #每个操作都开启重试机制（默认false，只有GET请求才会重试；true：GET、POST、PUT等所有请求都会重试）

# 关于Feign的配置
# Feign的请求：其实是 Hystrix + Ribbon。
# Hystrix在最外层，然后再到Ribbon，最后里面的是http请求。
# 所以说，Hystrix的熔断时间必须大于Ribbon的 ( ConnectTimeout + ReadTimeout )。
# 如果Ribbon开启了重试机制，还需要乘以对应的重试次数，保证在Ribbon里的请求还没结束时，Hystrix的熔断时间不会超时。